# List all generate options:
java -jar swagger-codegen-cli-3.0.27.jar generate -h

# List all generate possible languages:
java -jar swagger-codegen-cli-3.0.27.jar generate -l help

# List all generate additional-options:
java -jar swagger-codegen-cli-3.0.27.jar config-help -l spring




-------------------------------------------------------------------------------
# List all generate options:
java -jar swagger-codegen-cli-3.0.27.jar generate -h

usage: swagger-codegen generate [-h] [-v []] [-l] [-o] [-i] [-t]
                       [--template-version] [--template-engine] [-a] [-c]
                       [-D [ [ ...]]] [-s] [--api-package]
                       [--model-package] [--model-name-prefix]
                       [--model-name-suffix]
                       [--instantiation-types [ [ ...]]]
                       [--type-mappings [ [ ...]]]
                       [--additional-properties [ [ ...]]]
                       [--import-mappings [ [ ...]]]
                       [--ignore-import-mapping []] [--invoker-package]
                       [--group-id] [--artifact-id] [--artifact-version]
                       [--library] [--git-user-id] [--git-repo-id]
                       [--release-note] [--http-user-agent]
                       [--reserved-words-mappings [ [ ...]]]
                       [--ignore-file-override]
                       [--remove-operation-id-prefix] [-u]
                       [--disable-examples []] [--resolve-fully []]
                       [--flatten-inline-schema []]

named arguments:
  -h, --help             show this help message and exit
  -v [], --verbose []    verbose mode
  -l, --lang             client language to generate  (maybe  class name in
                         classpath, required)
  -o, --output           where to write  the  generated  files (current dir
                         by default)
  -i, --input-spec       location of  the  swagger  spec,  as  URL  or file
                         (required)
  -t, --template-dir     folder containing the template files
  --template-version     version of the template used on generation.
  --template-engine      template  engine  to   generate  files,  currently
                         supported: 'mustache' and 'handlebars'.
  -a, --auth             adds  authorization  headers   when  fetching  the
                         swagger  definitions  remotely.  Pass  in  a  URL-
                         encoded  string  of   name:header   with  a  comma
                         separating multiple values
  -c, --config           Path to  json  configuration  file.   File content
                         should  be  in   a   json   format  {"optionKey":"
                         optionValue",      "optionKey1":"optionValue1"...}
                         Supported  options  can  be   different  for  each
                         language. Run config-help  -l  {lang}  command for
                         language specific config options.
  -D [ [ ...]]           sets specified system properties  in the format of
                         name=value,name=value (or  multiple  options, each
                         with name=value)
  -s, --skip-overwrite   specifies  if  the   existing   files   should  be
                         overwritten during the generation.
  --api-package          package for generated api classes
  --model-package        package for generated models
  --model-name-prefix    Prefix that will be prepended  to all model names.
                         Default is the empty string.
  --model-name-suffix    PrefixSuffix that will  be  appended  to all model
                         names. Default is the empty string.
  --instantiation-types [ [ ...]]
                         sets instantiation type mappings  in the format of
                         type=instantiatedType,type=instantiatedType.   For
                         example  (in  Java):  array=ArrayList,map=HashMap.
                         In other words array  types  will get instantiated
                         as ArrayList in generated code.  You can also have
                         multiple occurrences of this option.
  --type-mappings [ [ ...]]
                         sets  mappings  between  swagger  spec  types  and
                         generated   code   types   in    the   format   of
                         swaggerType=generatedType,
                         swaggerType=generatedType.      For       example:
                         array=List,map=Map,string=String.  You   can  also
                         have multiple occurrences of this option.
  --additional-properties [ [ ...]]
                         sets additional properties that  can be referenced
                         by  the  mustache  templates   in  the  format  of
                         name=value,name=value. You can  also have multiple
                         occurrences of this option.
  --import-mappings [ [ ...]]
                         specifies mappings between a  given  class and the
                         import that should be used  for  that class in the
                         format of  type=import,type=import.  You  can also
                         have multiple occurrences of this option.
  --ignore-import-mapping []
                         allow   generate   model   classes   using   names
                         previously listed on import mappings.
  --invoker-package      root package for generated code
  --group-id             groupId in generated pom.xml
  --artifact-id          artifactId in generated pom.xml
  --artifact-version     artifact version generated in pom.xml
  --library              library template (sub-template)
  --git-user-id          Git user ID, e.g. swagger-api.
  --git-repo-id          Git repo ID, e.g. swagger-codegen.
  --release-note         Release note, default to 'Minor update'.
  --http-user-agent      HTTP user  agent,  e.g. codegen_csharp_api_client,
                         default   to   'Swagger-Codegen/{packageVersion}}/
                         {language}'
  --reserved-words-mappings [ [ ...]]
                         pecifies how a  reserved  name  should  be escaped
                         to. Otherwise, the  default  _<name>  is used. For
                         example id=identifier. You can  also have multiple
                         occurrences of this option.
  --ignore-file-override
                         Specifies an override  location  for the .swagger-
                         codegen-ignore  file.  Most   useful   on  initial
                         generation.
  --remove-operation-id-prefix
                         Remove prefix  of  operationId,  e.g. config_getId
                         => getId
  -u, --url              load arguments from a  local  file  or remote URL.
                         Arguments found will  replace  any  one  placed on
                         command.
  --disable-examples []  avoid  writing  json/xml   examples  on  generated
                         operations.
  --resolve-fully []     fully   resolves   json   schemas   when   loading
                         definitions.
  --flatten-inline-schema []
                         flattens inline composed schemas.

-------------------------------------------------------------------------------
# List all generate possible languages:
java -jar swagger-codegen-cli-3.0.27.jar generate -l help

aspnetcore
csharp
csharp-dotnet2
go
go-server
dynamic-html
html
html2
java
jaxrs-cxf-client
jaxrs-cxf
inflector
jaxrs-cxf-cdi
jaxrs-spec
jaxrs-jersey
jaxrs-di
jaxrs-resteasy-eap
jaxrs-resteasy
micronaut
spring
nodejs-server
openapi
openapi-yaml
kotlin-client
kotlin-server
php
python
python-flask
r
ruby
scala
scala-akka-http-server
swift3
swift4
swift5
typescript-angular
typescript-axios
typescript-fetch
javascript

-------------------------------------------------------------------------------
# List all generate additional-options:
java -jar swagger-codegen-cli-3.0.27.jar config-help -l spring

CONFIG OPTIONS
	sortParamsByRequiredFlag
	    Sort method arguments to place required parameters before optional parameters. (Default: true)

	ensureUniqueParams
	    Whether to ensure parameter names are unique in an operation (rename parameters that are not). (Default: true)

	allowUnicodeIdentifiers
	    boolean, toggles whether unicode identifiers are allowed in names or not, default is false (Default: false)

	modelPackage
	    package for generated models

	apiPackage
	    package for generated api classes

	invokerPackage
	    root package for generated code

	groupId
	    groupId in generated pom.xml

	artifactId
	    artifactId in generated pom.xml

	artifactVersion
	    artifact version in generated pom.xml

	artifactUrl
	    artifact URL in generated pom.xml

	artifactDescription
	    artifact description in generated pom.xml

	scmConnection
	    SCM connection in generated pom.xml

	scmDeveloperConnection
	    SCM developer connection in generated pom.xml

	scmUrl
	    SCM URL in generated pom.xml

	developerName
	    developer name in generated pom.xml

	developerEmail
	    developer email in generated pom.xml

	developerOrganization
	    developer organization in generated pom.xml

	developerOrganizationUrl
	    developer organization URL in generated pom.xml

	licenseName
	    The name of the license

	licenseUrl
	    The URL of the license

	sourceFolder
	    source folder for generated code

	localVariablePrefix
	    prefix for generated code members and local variables

	serializableModel
	    boolean - toggle "implements Serializable" for generated models (Default: false)

	bigDecimalAsString
	    Treat BigDecimal values as Strings to avoid precision loss. (Default: false)

	fullJavaUtil
	    whether to use fully qualified name for classes under java.util. This option only works for Java API client (Default: false)

	hideGenerationTimestamp
	    Hides the generation timestamp when files are generated.

	withXml
	    whether to include support for application/xml content type and include XML annotations in the model (works with libraries that provide support for JSON and XML) (Default: false)

	useOas2
	    use OpenAPI v2.0 (Swagger 1.5.x) (Default: false)

	notNullJacksonAnnotation
	    adds @JsonInclude(JsonInclude.Include.NON_NULL) annotation to model classes (Default: false)

	dateLibrary
	    Option. Date library to use
	        joda - Joda (for legacy app only)
	        legacy - Legacy java.util.Date (if you really have a good reason not to use threetenbp
	        java8-localdatetime - Java 8 using LocalDateTime (for legacy app only)
	        java8 - Java 8 native JSR310 (preferred for jdk 1.8+) - note: this also sets "java8" to true
	        threetenbp - Backport of JSR310 (preferred for jdk < 1.8)

	java8
	    Option. Use Java8 classes instead of third party equivalents
	        true - Use Java 8 classes such as Base64
	        false - Various third party libraries as needed

	checkDuplicatedModelName
	    Check if there are duplicated model names (ignoring case) (Default: false)

	title
	    server title name or client service name

	configPackage
	    configuration package for generated code

	basePackage
	    base package (invokerPackage) for generated code

	interfaceOnly
	    Whether to generate only API interface stubs without the server files. (Default: false)

	delegatePattern
	    Whether to generate the server files using the delegate pattern (Default: false)

	singleContentTypes
	    Whether to select only one produces/consumes content-type by operation. (Default: false)

	async
	    use async Callable controllers (Default: false)

	responseWrapper
	    wrap the responses in given type (Future,Callable,CompletableFuture,ListenableFuture,DeferredResult,HystrixCommand,RxObservable,RxSingle or fully qualified type)

	useTags
	    use tags for creating interface and controller classnames (Default: false)

	useBeanValidation
	    Use BeanValidation API annotations (Default: false)

	implicitHeaders
	    Use of @ApiImplicitParams for headers. (Default: false)

	swaggerDocketConfig
	    Generate Spring Swagger Docket configuration class. (Default: false)

	useOptional
	    Use Optional container for optional parameters (Default: false)

	generateForOpenFeign
	    Generate for usage with OpenFeign (instead of feign) (Default: false)

	defaultInterfaces
	    Generate default implementations for interfaces (Default: true)

	throwsException
	    Throws Exception in operation methods (Default: false)

	library
	    library template (sub-template) to use (Default: spring-boot)
	        spring-boot - Spring-boot Server application using the SpringFox integration.
	        spring-mvc - Spring-MVC Server application using the SpringFox integration.
	        spring-cloud - Spring-Cloud-Feign client with Spring-Boot auto-configured settings.

	springBootVersion
	    Spring boot version
	        2.1.7.RELEASE - 2.1.7.RELEASE
	        1.5.22.RELEASE - 1.5.22.RELEASE


